How to connect from ACS to ARS?
===================================
LINUX TO LINUX
	---- SSH
======================================================


ACS				ARS
- Authentication 
				IP + USER NAME + PASSWORD
				IP + USER NAME + KEY
- Authrization 
				SUDO - Without a password.
				SUDO - With a Passoword
				Sudo - 
					DIFF USER and PASS
=======================================================
13.234.21.217
ec2-user

ARS
13.233.80.192
13.235.73.93

Ansible - 
- optional arguments	
- Connection Options	aka Authentication
- Privilege Escalation Options aka Authrization

- Authentication 
				IP + USER NAME + PASSWORD
				 	-u 	-k
				IP + USER NAME + KEY
					-u 	--key-file

- Authorization 
				SUDO - Without a password.	-b
				SUDO - With a Passoword		-b -K
				Sudo - DIFF USER and PASS	-b -K --become-user
================================================================================
ansible localhost -m yum -a"name=httpd state=installed"
ansible localhost -m copy -a"src=index.html dest=/var/www/html"
ansible localhost -m service -a"name=httpd state=started"



-i INVENTORY
================================
What is INVENTORY
	LIST of ipaddress.
		- Can be on command line	DONE
		- can be in file[INI]		DONE
		- can be script
	It has GROUP		DONE
	It has BEHAVIOURALS Parameters.
	It has vars.
	It has GROUP of GROUP

ansible -i 13.233.80.192, -m yum -a"name=httpd state=installed" -u ec2-user --key-file=remote.pem 
ansible -i 13.233.80.192, -m copy -a"src=index.html dest=/var/www/html" -u ec2-user --key-file=remote.pem
ansible -i 13.233.80.192, -m service -a"name=httpd state=started" -u ec2-user --key-file=remote.pem

What is GROUP?
==================
GROUP is collection of Server ipadd or hostname insite a inventory. Its subset of all servers in inventory
- ALL		[Defatul]
- NO GROUP	[Defatul]
- CUSTOM




ansible all -i 13.233.80.192, -m yum -a"name=httpd state=installed" -u ec2-user --key-file=remote.pem -b 
ansible all -i 13.233.80.192, -m copy -a"src=index.html dest=/var/www/html" -u ec2-user --key-file=remote.pem -b
ansible all -i 13.233.80.192, -m service -a"name=httpd state=started" -u ec2-user --key-file=remote.pem -b

===LAST MODULE WOULD TAKE
ansible all -i 13.233.80.192, -m yum -a"name=httpd state=installed" -m copy -a"src=index.html dest=/var/www/html" -u ec2-user --key-file=remote.pem -b 


ansible all -i 13.233.80.192,13.235.73.93,13.234.21.217, -m yum -a"name=httpd state=installed" -u ec2-user --key-file=remote.pem -b 
ansible all -i 13.233.80.192,13.235.73.93,13.234.21.217, -m copy -a"src=index.html dest=/var/www/html" -u ec2-user --key-file=remote.pem -b
ansible all -i 13.233.80.192,13.235.73.93,13.234.21.217, -m service -a"name=httpd state=started" -u ec2-user --key-file=remote.pem -b

----------pROBLEM------------	
ansible all -i 13.233.80.192,13.235.73.93,13.234.21.217,13.233.80.192,13.235.73.93,13.234.21.217,13.233.80.192,13.235.73.93,13.234.21.217,13.233.80.192,13.235.73.93,13.234.21.217,13.233.80.192,13.235.73.93,13.234.21.217,13.233.80.192,13.235.73.93,13.234.21.217,13.233.80.192,13.235.73.93,13.234.21.217,13.233.80.192,13.235.73.93,13.234.21.217,13.233.80.192,13.235.73.93,13.234.21.217,13.233.80.192,13.235.73.93,13.234.21.217,13.233.80.192,13.235.73.93,13.234.21.217, -m yum -a"name=httpd state=installed" -u ec2-user --key-file=remote.pem -b 


ansible all -i 13.233.80.192,13.235.73.93,13.234.21.217, -m copy -a"src=index.html dest=/var/www/html" -u ec2-user --key-file=remote.pem -b
ansible all -i 13.233.80.192,13.235.73.93,13.234.21.217, -m service -a"name=httpd state=started" -u ec2-user --key-file=remote.pem -b

[root@ip-172-31-12-16 ~]# more inventory
13.233.80.192
13.235.73.93
13.234.21.217


-----------------------
solution

ansible all -i inventory -m yum -a"name=httpd state=installed" -u ec2-user --key-file=remote.pem -b 
ansible all -i inventory -m copy -a"src=index.html dest=/var/www/html" -u ec2-user --key-file=remote.pem -b
ansible all -i inventory -m service -a"name=httpd state=started" -u ec2-user --key-file=remote.pem -b


---------------------
inventory may have custom group
=========================
- CUSTOM

[root@ip-172-31-12-16 ~]# more inventory

[web]
13.233.80.192
13.235.73.93


[app]
13.234.21.217

[db]
4.5.6.6
4.5.6.7
4.5.6.8
4.5.6.9

ansible web -i inventory -m yum -a"name=httpd state=installed" -u ec2-user --key-file=remote.pem -b 
ansible web -i inventory -m copy -a"src=index.html dest=/var/www/html" -u ec2-user --key-file=remote.pem -b
ansible web -i inventory -m service -a"name=httpd state=started" -u ec2-user --key-file=remote.pem -b

ansible web,app -i inventory -m yum -a"name=httpd state=installed" -u ec2-user --key-file=remote.pem -b 
ansible web,app -i inventory -m copy -a"src=index.html dest=/var/www/html" -u ec2-user --key-file=remote.pem -b
ansible web,app -i inventory -m service -a"name=httpd state=started" -u ec2-user --key-file=remote.pem -b


[root@ip-172-31-12-16 ~]# more inventory

[web]
13.233.80.192
13.235.73.93

[gog:children]
web
app

[app]
13.234.21.217

[db]
4.5.6.6
4.5.6.7
4.5.6.8
4.5.6.9

ansible gog -i inventory -m yum -a"name=httpd state=installed" -u ec2-user --key-file=remote.pem -b 
ansible gog -i inventory -m copy -a"src=index.html dest=/var/www/html" -u ec2-user --key-file=remote.pem -b
ansible gog -i inventory -m service -a"name=httpd state=started" -u ec2-user --key-file=remote.pem -b

Assingment - 
https://www.devopsschool.com/blog/ansible-inventory-lab-excercise-part-1/

ACS
13.234.21.217
================
ec2-user


=====ARS==================
Selene Gomez	35.154.3.253
jose alfredo jimenez	35.154.232.86
Ted Tansill	13.233.80.192
Jorge Luis PeÃ±uelas Montoya	15.206.195.16
Ruben Omar Ruiz Madrigal	13.233.118.117
Carlos Mercado Lara	13.127.114.165
Francisco Javier GarcÃ­a GarcÃ­a	13.233.160.138
Aguilar, Oswaldo	13.233.154.52
Jesus Rodrigo Aldana Torres	13.232.162.48
Ana Isabel DurÃ¡n	13.126.245.67
B ill Zoromski	15.206.149.87
Jorge Barrios	13.127.73.149
Joaquin Hernandez Sandoval	13.126.206.132
Hugo Briones	13.235.73.93
Jorge Gutierrez	13.232.209.38
Bill Zoromski	13.233.14.173
Paul Ponce	52.66.28.8
Jorge Gonzalez	13.232.152.129
Maira Gueta	13.127.50.49
Janeth Ceballos	13.233.139.26
Ivan Figueroa	15.206.185.57
Enrique Estrada	13.232.66.44
Abril Trejo	3.7.69.65
Aguilar, Oswaldo	15.206.149.87
=======================================================================
-------pRB---------
ansible gog -i inventory -m yum -a"name=httpd state=installed" -u ec2-user --key-file=remote.pem -b 
ansible gog -i inventory -m copy -a"src=index.html dest=/var/www/html" -u ec2-user --key-file=remote.pem -b
ansible gog -i inventory -m service -a"name=httpd state=started" -u ec2-user --key-file=remote.pem -b
ansible gog -i inventory -m yum -a"name=httpd state=installed" -u ec2-user --key-file=remote.pem -b 
ansible gog -i inventory -m copy -a"src=index.html dest=/var/www/html" -u ec2-user --key-file=remote.pem -b
ansible gog -i inventory -m service -a"name=httpd state=started" -u ec2-user --key-file=remote.pem -b
ansible gog -i inventory -m yum -a"name=httpd state=installed" -u ec2-user --key-file=remote.pem -b 
ansible gog -i inventory -m copy -a"src=index.html dest=/var/www/html" -u ec2-user --key-file=remote.pem -b
ansible gog -i inventory -m service -a"name=httpd state=started" -u ec2-user --key-file=remote.pem -b
ansible gog -i inventory -m yum -a"name=httpd state=installed" -u ec2-user --key-file=remote.pem -b 
ansible gog -i inventory -m copy -a"src=index.html dest=/var/www/html" -u ec2-user --key-file=remote.pem -b
ansible gog -i inventory -m service -a"name=httpd state=started" -u ec2-user --key-file=remote.pem -b
ansible gog -i inventory -m yum -a"name=httpd state=installed" -u ec2-user --key-file=remote.pem -b 
ansible gog -i inventory -m copy -a"src=index.html dest=/var/www/html" -u ec2-user --key-file=remote.pem -b
ansible gog -i inventory -m service -a"name=httpd state=started" -u ec2-user --key-file=remote.pem -b
ansible gog -i inventory -m yum -a"name=httpd state=installed" -u ec2-user --key-file=remote.pem -b 
ansible gog -i inventory -m copy -a"src=index.html dest=/var/www/html" -u ec2-user --key-file=remote.pem -b
ansible gog -i inventory -m service -a"name=httpd state=started" -u ec2-user --key-file=remote.pem -b

---Sol------------

What is Playbook/Roles?
	It is a yaml file.
	Which Contains 
	- Multiple Play.

What is Play?
	Is a specification of 
	HOSTS: localhost or GROUP Name or GOG name
	TASK(S)
		- Collections of Modules with their own param.

	HOSTS: all
	Tasks:
		Task1 - Module1 - Param
		Task2 - Module2 - Param
		Task3 - Module3 - Param
		Task4 - Module4 - Param
	HOSTS: all
	Tasks:
		Task1 - Module - Param
		Task2 - Module - Param
		Task3 - Module - Param
		Task4 - Module - Param
	HOSTS: all
	Tasks:
		Task1 - Module - Param
		Task2 - Module - Param
		Task3 - Module - Param
		Task4 - Module - Param
=================================================
ansible gog -i inventory -m yum -a"name=httpd state=installed" -u ec2-user --key-file=remote.pem -b 
ansible gog -i inventory -m copy -a"src=index.html dest=/var/www/html" -u ec2-user --key-file=remote.pem -b
ansible gog -i inventory -m service -a"name=httpd state=started" -u ec2-user --key-file=remote.pem -b

---
- name: This sets up an httpd webserver
  hosts: web
  tasks:
  - name: Install the httpd apps
    yum: name=httpd state=present
  - name: start the httpd service
    service: name=httpd state=started
  - name: create a empty fle
    file: dest=/opt/test.txt state=touch
  - name: copy a file
    copy: dest=/var/www/html/ src="index.html"
...

---
- name: This sets up an httpd webserver
  hosts: web
  tasks:
    - yum: name=httpd state=present
    - service: name=httpd state=started
    - file: dest=/opt/test.txt state=touch
    - copy: dest=/var/www/html/ src="index.html"
...

=============================================
Rule of Running a Playbook?
=================================
- Check Syntax	--syntax-check
- Dry Run -C
- Run

ansible-playbook play2.yaml


ansible-playbook -i 13.233.80.192,13.235.73.93,13.234.21.217, play1.yaml -u ec2-user --key-file=remote.pem -b

ansible-playbook --syntax-check play1.yaml
ansible-playbook -C -i inventory play1.yaml -u ec2-user --key-file=remote.pem -b 
ansible-playbook -i inventory play1.yaml -u ec2-user --key-file=remote.pem -b 

=========================================================================================
=========================================================================================
Ansible behavioural parameteres
=========================================================================================
ansible-playbook -i inventory play1.yaml -u ec2-user --key-file=remote.pem -b 

13.233.80.192	ansible_connection=ssh ansible_port=28 ansible_user=user1 ansible_password=54353
13.235.73.93	ansible_connection=winrm ansible_user=user2 ansible_ssh_private_key_file=rem.pem
13.234.21.217	ansible_connection=paramiko ansible_user=user3 ansible_become=yes
13.234.21.218  ansible_become_password=asdda ansible_user=user3
13.234.21.219
13.234.21.220
db1  ansible_host=13.234.21.21


[root@ip-172-31-12-16 rajeshkumar]# more inventory
[web]
13.233.80.192 ansible_user=ec2-user ansible_ssh_private_key_file=remote.pem ansible_become=yes 
13.235.73.93 ansible_user=ec2-user ansible_ssh_private_key_file=remote.pem ansible_become=yes



[root@ip-172-31-12-16 rajeshkumar]# more inventory
[db]
13.233.80.192 
13.235.73.93 

[db:vars]
ansible_user=ec2-user 
ansible_ssh_private_key_file=remote.pem 
ansible_become=yes 


https://docs.ansible.com/ansible/latest/user_guide/intro_inventory.html#list-of-behavioral-inventory-parameters


Assignment - https://www.devopsschool.com/blog/ansible-playbook-lab-excercise-part-2/

================================================================================================
What about if we have multiple playbook?
=========================================
- Multiple Playbook
- Multiple TASKS File.
https://www.devopsschool.com/blog/ansible-include-scnario-with-list-of-plays-or-tasks/

- hosts: all
  tasks:
    - debug:
        msg: task1

    - name: Include task list in play
      include: stuff.yaml

------stuff.yaml------------
---
- name: http service state
  service: name=httpd state=started enabled=yes


------main.yaml------------
- hosts: all
  tasks:
    - debug:
        msg: task1

- include: stuff.yaml


------stuff.yaml------------
---
- hosts: web
  tasks:
    - debug:
        msg: task1
    - name: http service state
      service: name=httpd state=started enabled=yes



---
- name: This sets up an httpd webserver
  hosts: web
  tasks:
  - name: Install the httpd apps
    yum: name=httpd state=present
  - name: start the httpd service
    service: name=httpd state=started
...

---
- name: This sets up an httpd webserver
  hosts: web
  tasks:
  - name: create a empty fle
    file: dest=/opt/test.txt state=touch
  - name: copy a file
    copy: dest=/var/www/html/ src="index.html"
...

- include: play1.yaml
- include: play2.yaml


task.yaml
  - name: create a empty fle
    file: dest=/opt/test.txt state=touch
  - name: copy a file
    copy: dest=/var/www/html/ src="index.html"
=======================================================================
=======================================================================
What is Variable?
--------------------------
	varaible is holder for values which can be reused multiple places....
	-------------------------

https://www.devopsschool.com/tutorial/ansible/variables/index.html


---
- name: This sets up an httpd webserver
  hosts: web
  vars:
    name: "rajesh kumar"
    message: "Hello everyone"
    package: httpd
  vars_files:
    - vars.yaml

  tasks:
  - name: Install the httpd apps
    yum: name={{ package }} state=present
  - name: start the httpd service
    service: name={{ package }} state=started
  - name: create a empty fle
    file: dest=/opt/test.txt state=touch
  - name: copy a file
    copy: dest=/var/www/html/ src="index.html"
  - debug:
      msg: My Name is {{ name }}  and my message is {{ message }}
...


---
- name: This sets up an httpd webserver
  hosts: web
  vars:
    name: "rajesh kumar"
    message: "Hello everyone"
    package: httpd
  vars_files:
    - vars.yaml
  vars_prompt:
    - name: "Version"
      prompt: "Which version Do you want to install?"

  tasks:
  - name: Install the httpd apps
    yum: name={{ package }} state=present
  - name: start the httpd service
    service: name={{ package }} state=started
  - name: create a empty fle
    file: dest=/opt/test.txt state=touch
  - name: copy a file
    copy: dest=/var/www/html/ src="index.html"
  - debug:
      msg: My Name is {{ name }}  and my message is {{ message }}
  - debug:
      msg: Prompt message is {{ Version }}
...


---
- name: This sets up an httpd webserver
  hosts: web
  vars:
    name: "rajesh kumar"
    message: "Hello everyone"
    package: httpd
  vars_files:
    - vars.yaml
  vars_prompt:
    - name: "Version"
      prompt: "Which version Do you want to install?"

  tasks:
  - name: include default step variables
    include_vars: vars-tasks.yaml
  - name: Install the httpd apps
    yum: name={{ package }} state=present
  - name: start the httpd service
    service: name={{ package }} state=started
  - name: create a empty fle
    file: dest=/opt/test.txt state=touch
  - name: copy a file
    copy: dest=/var/www/html/ src="index.html"
  - debug:
      msg: My Name is {{ name }}  and my message is {{ message }}
  - debug:
      msg: Prompt message is {{ Version }}
  - name: Ansible register variable basic example
    shell: "find *.txt"
    args:
      chdir: "/root/Ansible-Mexico-Az-June-2020/rajeshkumar/vars"
    register: find_output
  - debug:
      msg: Prompt message is {{ find_output }}

...



Register
https://www.devopsschool.com/blog/use-of-runtime-variables-to-save-into-another-variable-using-register-in-ansible/


---
- name: This sets up an httpd webserver
  hosts: localhost
  vars:
    name: "rajesh kumar"
    message: "Hello everyone"
    package: httpd
  vars_files:
    - vars.yaml
  vars_prompt:
    - name: "Version"
      prompt: "Which version Do you want to install?"

  tasks:
  - name: include default step variables
    include_vars: vars-tasks.yaml
  - name: Install the httpd apps
    yum: name={{ package }} state=present
  - name: start the httpd service
    service: name={{ package }} state=started
  - name: create a empty fle
    file: dest=/opt/test.txt state=touch
  - name: copy a file
    copy: dest=/var/www/html/ src="index.html"
  - debug:
      msg: My Name is {{ name }}  and my message is {{ message }}
  - debug:
      msg: Prompt message is {{ Version }}
  - name: Ansible register variable basic example
    shell: "find *.txt"
    args:
      chdir: "/root/Ansible-Mexico-Az-June-2020/rajeshkumar/vars"
    register: find_output
  - debug:
      msg: Prompt message is {{ find_output }}
...	








